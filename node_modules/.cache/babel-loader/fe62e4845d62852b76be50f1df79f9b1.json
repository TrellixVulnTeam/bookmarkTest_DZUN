{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nvar InputActionTypes;\n\n(function (InputActionTypes) {\n  InputActionTypes[\"ON_CHANGE\"] = \"ON_CHANGE\";\n  InputActionTypes[\"SET_VAlUE\"] = \"SET_VALUE\";\n  InputActionTypes[\"SET_ERROR\"] = \"SET_ERROR\";\n  InputActionTypes[\"SET_TOUCHED\"] = \"SET_TOUCHED\";\n})(InputActionTypes || (InputActionTypes = {}));\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case InputActionTypes.ON_CHANGE:\n      return { ...state,\n        value: action.value,\n        error: action.error !== undefined ? action.error : state.error\n      };\n\n    case InputActionTypes.SET_VAlUE:\n      return { ...state,\n        value: action.value\n      };\n\n    case InputActionTypes.SET_TOUCHED:\n      return { ...state,\n        touched: action.touched\n      };\n\n    case InputActionTypes.SET_ERROR:\n      return { ...state,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst useInput = (initialValue, validate) => {\n  _s();\n\n  const initialState = {\n    value: initialValue,\n    error: validate ? validate(initialValue) : '',\n    touched: false\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const onChange = e => {\n    e.preventDefault();\n    const {\n      value\n    } = e.target;\n    const action = {\n      type: InputActionTypes.ON_CHANGE,\n      value: e.target.value\n    };\n\n    if (validate) {\n      action.error = validate(value);\n    }\n\n    dispatch(action);\n  };\n\n  const onBlur = () => {\n    dispatch({\n      type: InputActionTypes.SET_TOUCHED,\n      touched: true\n    });\n  };\n\n  const setValue = value => {\n    dispatch({\n      type: InputActionTypes.SET_VAlUE,\n      value\n    });\n  };\n\n  const setTouched = touched => {\n    dispatch({\n      type: InputActionTypes.SET_TOUCHED,\n      touched\n    });\n  };\n\n  const setError = error => {\n    dispatch({\n      type: InputActionTypes.SET_ERROR,\n      error\n    });\n  };\n\n  return [state, onChange, onBlur, {\n    setValue,\n    setTouched,\n    setError\n  }];\n};\n\n_s(useInput, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Users/macbook/Documents/myWork/bookmarks-reactjs/src/hooks/useInput.ts"],"names":["useReducer","InputActionTypes","reducer","state","action","type","ON_CHANGE","value","error","undefined","SET_VAlUE","SET_TOUCHED","touched","SET_ERROR","useInput","initialValue","validate","initialState","dispatch","onChange","e","preventDefault","target","onBlur","setValue","setTouched","setError"],"mappings":"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","sourcesContent":["import { useReducer } from 'react';\n\ninterface InputState {\n  value: string;\n  error: string;\n  touched: boolean;\n}\n\nenum InputActionTypes {\n  ON_CHANGE = 'ON_CHANGE',\n  SET_VAlUE = 'SET_VALUE',\n  SET_ERROR = 'SET_ERROR',\n  SET_TOUCHED = 'SET_TOUCHED',\n}\n\ntype Actions =\n  | { type: InputActionTypes.ON_CHANGE; value: string; error?: string }\n  | { type: InputActionTypes.SET_VAlUE; value: string }\n  | { type: InputActionTypes.SET_TOUCHED; touched: boolean }\n  | { type: InputActionTypes.SET_ERROR; error: string };\n\nconst reducer = (state: InputState, action: Actions) => {\n  switch (action.type) {\n    case InputActionTypes.ON_CHANGE:\n      return {\n        ...state,\n        value: action.value,\n        error: action.error !== undefined ? action.error : state.error,\n      };\n    case InputActionTypes.SET_VAlUE:\n      return { ...state, value: action.value };\n\n    case InputActionTypes.SET_TOUCHED:\n      return { ...state, touched: action.touched };\n\n    case InputActionTypes.SET_ERROR:\n      return { ...state, error: action.error };\n\n    default:\n      return state;\n  }\n};\n\nconst useInput = (\n  initialValue: string,\n  validate?: (value: string) => string,\n): [\n  InputState,\n  (e: React.ChangeEvent<HTMLInputElement>) => void,\n  () => void,\n  {\n    setValue: (value: string) => void;\n    setTouched: (touched: boolean) => void;\n    setError: (error: string) => void;\n  },\n] => {\n  const initialState = {\n    value: initialValue,\n    error: validate ? validate(initialValue) : '',\n    touched: false,\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    const { value } = e.target;\n    const action: Actions = { type: InputActionTypes.ON_CHANGE, value: e.target.value };\n    if (validate) {\n      action.error = validate(value);\n    }\n\n    dispatch(action);\n  };\n\n  const onBlur = () => {\n    dispatch({ type: InputActionTypes.SET_TOUCHED, touched: true });\n  };\n\n  const setValue = (value: string) => {\n    dispatch({ type: InputActionTypes.SET_VAlUE, value });\n  };\n\n  const setTouched = (touched: boolean) => {\n    dispatch({ type: InputActionTypes.SET_TOUCHED, touched });\n  };\n\n  const setError = (error: string) => {\n    dispatch({ type: InputActionTypes.SET_ERROR, error });\n  };\n\n  return [state, onChange, onBlur, { setValue, setTouched, setError }];\n};\n\nexport default useInput;\n"]},"metadata":{},"sourceType":"module"}