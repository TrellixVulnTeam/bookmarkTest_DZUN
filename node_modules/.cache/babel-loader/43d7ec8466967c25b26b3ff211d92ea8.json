{"ast":null,"code":"export const validate = link => {\n  if (!link) return 'Champ requis';\n\n  if (link.startsWith('https://vimeo.com') || link.startsWith('https://www.flickr.com')) {\n    return '';\n  }\n\n  return 'Lien non valide ou non pris en charge';\n};\nexport const getLinkDetails = async link => {\n  if (validate(link)) return null;\n  let url = link.startsWith('https://vimeo.com') ? `https://vimeo.com/api/oembed.json?url=${link}` : `https://www.flickr.com/services/oembed/?format=json&url=${link}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return { ...data,\n    type: link.startsWith('https://vimeo.com') ? 'video' : 'photo'\n  };\n};","map":{"version":3,"sources":["/Users/macbook/Documents/myWork/bookmarks-reactjs/src/utils/link.ts"],"names":["validate","link","startsWith","getLinkDetails","url","response","fetch","data","json","type"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,IAAD,IAAkB;AACxC,MAAI,CAACA,IAAL,EAAW,OAAO,cAAP;;AACX,MAAIA,IAAI,CAACC,UAAL,CAAgB,mBAAhB,KAAwCD,IAAI,CAACC,UAAL,CAAgB,wBAAhB,CAA5C,EAAuF;AACrF,WAAO,EAAP;AACD;;AACD,SAAO,uCAAP;AACD,CANM;AAQP,OAAO,MAAMC,cAAc,GAAG,MAAOF,IAAP,IAAwB;AACpD,MAAID,QAAQ,CAACC,IAAD,CAAZ,EAAoB,OAAO,IAAP;AACpB,MAAIG,GAAG,GAAGH,IAAI,CAACC,UAAL,CAAgB,mBAAhB,IACL,yCAAwCD,IAAK,EADxC,GAEL,2DAA0DA,IAAK,EAFpE;AAGA,QAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,QAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,SAAO,EAAE,GAAGD,IAAL;AAAWE,IAAAA,IAAI,EAAER,IAAI,CAACC,UAAL,CAAgB,mBAAhB,IAAuC,OAAvC,GAAiD;AAAlE,GAAP;AACD,CATM","sourcesContent":["export const validate = (link: string) => {\n  if (!link) return 'Champ requis';\n  if (link.startsWith('https://vimeo.com') || link.startsWith('https://www.flickr.com')) {\n    return '';\n  }\n  return 'Lien non valide ou non pris en charge';\n};\n\nexport const getLinkDetails = async (link: string) => {\n  if (validate(link)) return null;\n  let url = link.startsWith('https://vimeo.com')\n    ? `https://vimeo.com/api/oembed.json?url=${link}`\n    : `https://www.flickr.com/services/oembed/?format=json&url=${link}`;\n  const response = await fetch(url);\n  const data = await response.json();\n\n  return { ...data, type: link.startsWith('https://vimeo.com') ? 'video' : 'photo' };\n};\n"]},"metadata":{},"sourceType":"module"}