{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from 'react';\n\nconst usePersist = (initialValue, key) => {\n  _s();\n\n  const [value, setValue] = useState(initialValue);\n  const updateValue = useCallback(nextValue => {\n    localStorage.setItem(key, JSON.stringify(nextValue));\n    setValue(nextValue);\n  }, [key]);\n  useEffect(() => {\n    const valueString = localStorage.getItem(key);\n\n    if (valueString) {\n      setValue(JSON.parse(valueString));\n    }\n  }, [key]);\n  return [value, updateValue];\n};\n\n_s(usePersist, \"TMf6PWGncfiDjn0WZrLAeiPVf40=\");\n\nexport default usePersist;","map":{"version":3,"sources":["/Users/macbook/Documents/myWork/bookmarks-reactjs/src/hooks/usePersist.ts"],"names":["useState","useCallback","useEffect","usePersist","initialValue","key","value","setValue","updateValue","nextValue","localStorage","setItem","JSON","stringify","valueString","getItem","parse"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;;AAEA,MAAMC,UAAU,GAAG,CAAIC,YAAJ,EAAqBC,GAArB,KAA8D;AAAA;;AAC/E,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACI,YAAD,CAAlC;AAEA,QAAMI,WAAW,GAAGP,WAAW,CAC5BQ,SAAD,IAAkB;AAChBC,IAAAA,YAAY,CAACC,OAAb,CAAqBN,GAArB,EAA0BO,IAAI,CAACC,SAAL,CAAeJ,SAAf,CAA1B;AACAF,IAAAA,QAAQ,CAACE,SAAD,CAAR;AACD,GAJ4B,EAK7B,CAACJ,GAAD,CAL6B,CAA/B;AAQAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,WAAW,GAAGJ,YAAY,CAACK,OAAb,CAAqBV,GAArB,CAApB;;AACA,QAAIS,WAAJ,EAAiB;AACfP,MAAAA,QAAQ,CAACK,IAAI,CAACI,KAAL,CAAWF,WAAX,CAAD,CAAR;AACD;AACF,GALQ,EAKN,CAACT,GAAD,CALM,CAAT;AAOA,SAAO,CAACC,KAAD,EAAQE,WAAR,CAAP;AACD,CAnBD;;GAAML,U;;AAqBN,eAAeA,UAAf","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nconst usePersist = <T>(initialValue: T, key: string): [T, (value: T) => void] => {\n  const [value, setValue] = useState(initialValue);\n\n  const updateValue = useCallback(\n    (nextValue: T) => {\n      localStorage.setItem(key, JSON.stringify(nextValue));\n      setValue(nextValue);\n    },\n    [key],\n  );\n\n  useEffect(() => {\n    const valueString = localStorage.getItem(key);\n    if (valueString) {\n      setValue(JSON.parse(valueString));\n    }\n  }, [key]);\n\n  return [value, updateValue];\n};\n\nexport default usePersist;\n"]},"metadata":{},"sourceType":"module"}