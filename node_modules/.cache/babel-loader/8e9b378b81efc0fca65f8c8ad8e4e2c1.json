{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/myWork/bookmarks-reactjs/src/components/TagsInput.tsx\",\n    _s = $RefreshSig$();\n\nimport useInput from '../hooks/useInput';\nimport TextField from './TextField';\nimport remove from \"../assets/remove.svg\";\nimport classes from './scss/tagsInput.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TagsInput = ({\n  tags,\n  label,\n  onTagsChange,\n  className\n}) => {\n  _s();\n\n  // eslint-disable-next-line\n  const [{\n    value,\n    error\n  }, onChange, onBlur, {\n    setError,\n    setValue\n  }] = useInput('');\n\n  const addTag = () => {\n    if (!value) {\n      setError(\"Impossible d'ajouter un Tag vide\");\n    } else if (tags.find(tag => tag === value)) {\n      setError('Tag déjà exist');\n    } else {\n      onTagsChange([...tags, value]);\n      setValue('');\n      setError('');\n    }\n  };\n\n  const renderTag = tag => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.tagContainer,\n      children: [tag, /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => onTagsChange(tags.filter(t => t !== tag)),\n        src: remove,\n        alt: \"remove\",\n        className: classes.tagButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, tag, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    className: className,\n    label: label,\n    error: error,\n    inputComponent: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputContainer,\n      children: [tags.map(renderTag), /*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            e.preventDefault();\n            addTag();\n          }\n        },\n        className: classes.input,\n        value: value,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: addTag,\n        className: classes.add,\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TagsInput, \"39PFtGEBfXzkXRiG1YZ4xHMuNfo=\", false, function () {\n  return [useInput];\n});\n\n_c = TagsInput;\nTagsInput.defaultProps = {\n  label: 'TAGS'\n};\nexport default TagsInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagsInput\");","map":{"version":3,"sources":["/Users/macbook/Documents/myWork/bookmarks-reactjs/src/components/TagsInput.tsx"],"names":["useInput","TextField","classes","TagsInput","tags","label","onTagsChange","className","value","error","onChange","onBlur","setError","setValue","addTag","find","tag","renderTag","tagContainer","filter","t","remove","tagButton","inputContainer","map","e","key","preventDefault","input","add","defaultProps"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,OAAOC,OAAP,MAAoB,8BAApB;;;AASA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,YAAf;AAA6BC,EAAAA;AAA7B,CAAD,KAA8D;AAAA;;AAC9E;AACA,QAAM,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAmBC,QAAnB,EAA6BC,MAA7B,EAAqC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAArC,IAA+Db,QAAQ,CAAC,EAAD,CAA7E;;AAEA,QAAMc,MAAM,GAAG,MAAM;AACnB,QAAI,CAACN,KAAL,EAAY;AACVI,MAAAA,QAAQ,CAAC,kCAAD,CAAR;AACD,KAFD,MAEO,IAAIR,IAAI,CAACW,IAAL,CAAWC,GAAD,IAASA,GAAG,KAAKR,KAA3B,CAAJ,EAAuC;AAC5CI,MAAAA,QAAQ,CAAC,gBAAD,CAAR;AACD,KAFM,MAEA;AACLN,MAAAA,YAAY,CAAC,CAAC,GAAGF,IAAJ,EAAUI,KAAV,CAAD,CAAZ;AACAK,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GAVD;;AAYA,QAAMK,SAAS,GAAID,GAAD,IAAiB;AACjC,wBACE;AAAe,MAAA,SAAS,EAAEd,OAAO,CAACgB,YAAlC;AAAA,iBACGF,GADH,eAEE;AACE,QAAA,OAAO,EAAE,MAAMV,YAAY,CAACF,IAAI,CAACe,MAAL,CAAaC,CAAD,IAAOA,CAAC,KAAKJ,GAAzB,CAAD,CAD7B;AAEE,QAAA,GAAG,EAAEK,MAFP;AAGE,QAAA,GAAG,EAAC,QAHN;AAIE,QAAA,SAAS,EAAEnB,OAAO,CAACoB;AAJrB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUN,GAAV;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAZD;;AAcA,sBACE,QAAC,SAAD;AACE,IAAA,SAAS,EAAET,SADb;AAEE,IAAA,KAAK,EAAEF,KAFT;AAGE,IAAA,KAAK,EAAEI,KAHT;AAIE,IAAA,cAAc,eACZ;AAAK,MAAA,SAAS,EAAEP,OAAO,CAACqB,cAAxB;AAAA,iBACGnB,IAAI,CAACoB,GAAL,CAASP,SAAT,CADH,eAEE;AACE,QAAA,SAAS,EAAGQ,CAAD,IAAO;AAChB,cAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBD,YAAAA,CAAC,CAACE,cAAF;AACAb,YAAAA,MAAM;AACP;AACF,SANH;AAOE,QAAA,SAAS,EAAEZ,OAAO,CAAC0B,KAPrB;AAQE,QAAA,KAAK,EAAEpB,KART;AASE,QAAA,QAAQ,EAAEE;AATZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAaE;AAAK,QAAA,OAAO,EAAEI,MAAd;AAAsB,QAAA,SAAS,EAAEZ,OAAO,CAAC2B,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAxDD;;GAAM1B,S;UAEiEH,Q;;;KAFjEG,S;AA0DNA,SAAS,CAAC2B,YAAV,GAAyB;AACvBzB,EAAAA,KAAK,EAAE;AADgB,CAAzB;AAIA,eAAeF,SAAf","sourcesContent":["import useInput from '../hooks/useInput';\nimport TextField from './TextField';\nimport remove from '../assets/remove.svg';\nimport classes from './scss/tagsInput.module.scss';\n\ninterface TagsInputProps {\n  tags: string[];\n  onTagsChange: (value: string[]) => void;\n  className?: string;\n  label: string;\n}\n\nconst TagsInput = ({ tags, label, onTagsChange, className }: TagsInputProps) => {\n  // eslint-disable-next-line\n  const [{ value, error }, onChange, onBlur, { setError, setValue }] = useInput('');\n\n  const addTag = () => {\n    if (!value) {\n      setError(\"Impossible d'ajouter un Tag vide\");\n    } else if (tags.find((tag) => tag === value)) {\n      setError('Tag déjà exist');\n    } else {\n      onTagsChange([...tags, value]);\n      setValue('');\n      setError('');\n    }\n  };\n\n  const renderTag = (tag: string) => {\n    return (\n      <div key={tag} className={classes.tagContainer}>\n        {tag}\n        <img\n          onClick={() => onTagsChange(tags.filter((t) => t !== tag))}\n          src={remove}\n          alt=\"remove\"\n          className={classes.tagButton}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <TextField\n      className={className}\n      label={label}\n      error={error}\n      inputComponent={\n        <div className={classes.inputContainer}>\n          {tags.map(renderTag)}\n          <input\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                e.preventDefault();\n                addTag();\n              }\n            }}\n            className={classes.input}\n            value={value}\n            onChange={onChange}\n          />\n          <div onClick={addTag} className={classes.add}>\n            Ajouter\n          </div>\n        </div>\n      }\n    />\n  );\n};\n\nTagsInput.defaultProps = {\n  label: 'TAGS',\n};\n\nexport default TagsInput;\n"]},"metadata":{},"sourceType":"module"}